{"version":3,"sources":["components/Sidebar.tsx","util/Store.tsx","components/Header.tsx","components/Footer.tsx","pages/Overview.tsx","util/request.ts","pages/Account/AccountAction.tsx","components/AccountType.tsx","pages/Account/AccountGenerate.tsx","pages/Account/Accounts.tsx","util/events.ts","components/Notifications.tsx","pages/Email/EmailAdd.tsx","pages/Email/EmailDelete.tsx","pages/Email/Emails.tsx","pages/Proxy/ProxyAdd.tsx","pages/Proxy/ProxyDelete.tsx","pages/Proxy/Proxies.tsx","pages/Captcha/CaptchaAdd.tsx","pages/Captcha/CaptchaDelete.tsx","pages/Captcha/Captchas.tsx","components/App.tsx","index.tsx"],"names":["ListItemLink","props","icon","primary","to","tooltip","renderLink","React","useMemo","forwardRef","itemProps","ref","T","Tooltip","children","title","ListItem","button","component","ListItemIcon","ListItemText","Sidebar","useState","open","setOpen","Drawer","className","variant","anchor","AppBar","position","Toolbar","IconButton","onClick","edge","List","SvgIcon","aria-hidden","focusable","data-prefix","data-icon","role","xmlns","viewBox","fill","d","InitialState","darkMode","StoreContext","createContext","Store","state","setState","Provider","value","merge","Header","useMediaQuery","useContext","context","setContext","Typography","style","flexGrow","color","noWrap","FormControlLabel","label","control","Switch","checked","onChange","Footer","align","Date","getFullYear","Link","underline","rel","href","target","Button","startIcon","GitHub","Overview","accounts","filter","x","status","accounts_today","created_at","setHours","captcha_balance","captchas","reduce","total","balance","Container","maxWidth","GridList","cellHeight","cols","GridListTile","Card","CardContent","gutterBottom","length","Chip","clickable","CardActions","size","toFixed","captchas_solved","request","path","options","a","headers","body","JSON","stringify","method","fetch","response","text","json","parse","message","Action","selected","nothingSelected","workers","setWorkers","payload","setPayload","count","account_ids","map","uuid","type","first","console","log","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","find","DiscordAction","TextField","min","e","Math","max","DialogActions","disabled","register","setRegister","browser","setBrowser","verifyEmail","setverifyEmail","invite","setInvite","uploadDateOfBirth","setUploadDateOfBirth","uploadAvatar","setUploadAvatar","connect","setConnect","updateUser","setUpdateUser","useEffect","Accordion","defaultExpanded","AccordionSummary","expandIcon","AccordionDetails","flexDirection","Checkbox","AccountType","setValue","FormControl","InputLabel","Select","required","MenuItem","Generate","setCount","loading","setLoading","setType","error","setError","toString","aria-labelledby","id","display","justifyContent","Number","CircularProgress","Accounts","actionOpen","setActionOpen","generateOpen","setGenerateOpen","setSelected","overflow","selection","filtering","pageSize","onSelectionChange","s","isLoading","data","columns","field","lookup","getLookup","callback","Object","fromEntries","unique","events","EventSource","Notifications","event","setEvent","timeout","changeTimeout","eventDispatched","action","clearTimeout","severity","setTimeout","onError","readyState","addEventListener","removeEventListener","Snackbar","anchorOrigin","vertical","horizontal","Alert","onopen","window","AddEmail","secure","setSecure","provider","setProvider","email","setEmail","password","setPassword","host","setHost","port","setPort","result","emails","alt","width","src","name","autoFocus","DeleteEmail","Email","addPopup","setAddPopup","deleteEmail","setDeleteEmail","Add","marginTop","username","bind","AddProxy","poolSize","setPoolSize","list","setList","split","proxy","proxies","TextareaAutosize","rowsMin","placeholder","DeleteProxy","Proxies","deleteProxy","setDeleteProxy","CaptchaAdd","key","setKey","service","captcha","DeleteCaptcha","Captcha","deleteCaptcha","setDeleteCaptcha","Dashboard","theme","createMuiTheme","palette","main","secondary","then","providers","ThemeProvider","CssBaseline","height","exact","Emails","Captchas","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2ca87c23.chunk.js","sourcesContent":["// @ts-nocheck\nimport React from \"react\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport SupervisorAccountIcon from \"@material-ui/icons/SupervisorAccount\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport DnsIcon from \"@material-ui/icons/Dns\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport {\n\tList,\n\tListItem,\n\tListItemIcon,\n\tIconButton,\n\tDrawer,\n\tListItemText,\n\tAppBar,\n\tToolbar,\n\tSvgIcon,\n\tTooltip,\n} from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport { Link as RouterLink, LinkProps as RouterLinkProps } from \"react-router-dom\";\n\ninterface ListItemLinkProps {\n\ticon?: React.ReactElement;\n\tprimary: string;\n\tto: string;\n\ttooltip?: boolean;\n}\n\nexport function ListItemLink(props: ListItemLinkProps) {\n\tconst { icon, primary, to, tooltip } = props;\n\n\tconst renderLink = React.useMemo(\n\t\t() =>\n\t\t\tReact.forwardRef<any, Omit<RouterLinkProps, \"to\">>((itemProps, ref) => (\n\t\t\t\t<RouterLink to={to} ref={ref} {...itemProps} />\n\t\t\t)),\n\t\t[to]\n\t);\n\n\tconst T = tooltip ? Tooltip : ({ children }: any) => <>{children}</>;\n\n\treturn (\n\t\t<li>\n\t\t\t<T title={primary}>\n\t\t\t\t<ListItem button component={renderLink}>\n\t\t\t\t\t{icon ? <ListItemIcon>{icon}</ListItemIcon> : null}\n\t\t\t\t\t<ListItemText primary={primary} />\n\t\t\t\t</ListItem>\n\t\t\t</T>\n\t\t</li>\n\t);\n}\n\nexport default function Sidebar() {\n\tconst [open, setOpen] = useState(false);\n\n\treturn (\n\t\t<Drawer className={!open ? \"MuiDrawer-minimized\" : \"\"} variant=\"permanent\" anchor=\"left\">\n\t\t\t<AppBar position=\"sticky\">\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<IconButton onClick={() => setOpen(!open)} edge=\"start\" className=\"MuiIconButton-colorInherit\">\n\t\t\t\t\t\t{open ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n\t\t\t\t\t</IconButton>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\n\t\t\t<List>\n\t\t\t\t<ListItemLink tooltip={!open} to=\"/\" primary=\"Overview\" icon={<HomeIcon />} />\n\t\t\t\t<ListItemLink tooltip={!open} to=\"/accounts\" primary=\"Accounts\" icon={<SupervisorAccountIcon />} />\n\t\t\t\t<ListItemLink tooltip={!open} to=\"/emails\" primary=\"Emails\" icon={<MailIcon />} />\n\t\t\t\t<ListItemLink\n\t\t\t\t\ttooltip={!open}\n\t\t\t\t\tto=\"/captchas\"\n\t\t\t\t\tprimary=\"Captchas\"\n\t\t\t\t\ticon={\n\t\t\t\t\t\t<SvgIcon\n\t\t\t\t\t\t\taria-hidden=\"true\"\n\t\t\t\t\t\t\tfocusable=\"false\"\n\t\t\t\t\t\t\tdata-prefix=\"fas\"\n\t\t\t\t\t\t\tdata-icon=\"robot\"\n\t\t\t\t\t\t\trole=\"img\"\n\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\t\tviewBox=\"0 0 640 512\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\tfill=\"currentColor\"\n\t\t\t\t\t\t\t\td=\"M32,224H64V416H32A31.96166,31.96166,0,0,1,0,384V256A31.96166,31.96166,0,0,1,32,224Zm512-48V448a64.06328,64.06328,0,0,1-64,64H160a64.06328,64.06328,0,0,1-64-64V176a79.974,79.974,0,0,1,80-80H288V32a32,32,0,0,1,64,0V96H464A79.974,79.974,0,0,1,544,176ZM264,256a40,40,0,1,0-40,40A39.997,39.997,0,0,0,264,256Zm-8,128H192v32h64Zm96,0H288v32h64ZM456,256a40,40,0,1,0-40,40A39.997,39.997,0,0,0,456,256Zm-8,128H384v32h64ZM640,256V384a31.96166,31.96166,0,0,1-32,32H576V224h32A31.96166,31.96166,0,0,1,640,256Z\"\n\t\t\t\t\t\t\t></path>\n\t\t\t\t\t\t</SvgIcon>\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t\t<ListItemLink tooltip={!open} to=\"/proxies\" primary=\"Proxy\" icon={<DnsIcon />} />\n\t\t\t</List>\n\t\t</Drawer>\n\t);\n}\n","import React, { createContext, Dispatch, ReactNode, SetStateAction, useState } from \"react\";\nimport \"missing-native-js-functions\";\nimport { Account, Worker, Email, Captcha, Proxy } from \"./types\";\n\nconst InitialState: InitalStateContext = {\n\tdarkMode: true,\n};\n\nexport interface InitalStateContext {\n\tdarkMode?: boolean;\n\taccounts?: Account[];\n\tworkers?: Worker[];\n\temails?: Email[];\n\tcaptchas?: Captcha[];\n\tproxies?: Proxy[];\n\tcaptchas_solved?: number;\n}\n\n// @ts-ignore\nexport const StoreContext = createContext<[InitalStateContext, Dispatch<SetStateAction<InitalStateContext>>]>(null);\n\nexport const Store = ({ children }: { children: ReactNode }) => {\n\tconst [state, setState] = useState(InitialState);\n\n\tfunction set(value: any) {\n\t\tif (typeof value !== \"object\") return;\n\t\tsetState({ ...value.merge(state) });\n\t}\n\n\treturn <StoreContext.Provider value={[state, set]}>{children}</StoreContext.Provider>;\n};\n","import AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { FormControlLabel, Icon, Switch, useMediaQuery } from \"@material-ui/core\";\nimport { StoreContext } from \"../util/Store\";\nimport { useContext } from \"react\";\n\nexport default function Header() {\n\tconst prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\n\tconst [context, setContext] = useContext(StoreContext);\n\n\treturn (\n\t\t<AppBar position=\"sticky\">\n\t\t\t<Toolbar>\n\t\t\t\t<Typography style={{ flexGrow: 1 }} component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap>\n\t\t\t\t\tClickfarm\n\t\t\t\t</Typography>\n\t\t\t\t<FormControlLabel\n\t\t\t\t\tlabel={\"Dark Mode\"}\n\t\t\t\t\tcontrol={\n\t\t\t\t\t\t<Switch\n\t\t\t\t\t\t\tcolor=\"default\"\n\t\t\t\t\t\t\tchecked={context.darkMode}\n\t\t\t\t\t\t\tonChange={() => setContext({ darkMode: !context.darkMode })}\n\t\t\t\t\t\t></Switch>\n\t\t\t\t\t}\n\t\t\t\t></FormControlLabel>\n\t\t\t</Toolbar>\n\t\t</AppBar>\n\t);\n}\n","// @ts-nocheck\nimport { Button, Link, Typography } from \"@material-ui/core\";\nimport { GitHub } from \"@material-ui/icons\";\n\nexport default function Footer() {\n\treturn (\n\t\t<Typography component=\"div\" variant=\"body2\" color=\"textSecondary\" align=\"center\">\n\t\t\t<p>Copyright {new Date().getFullYear()} © Flam3rboy - Clickfarm</p>\n\t\t\t<Link underline=\"none\" rel=\"noopener\" href=\"https://github.com/Flam3rboy/clickfarm\" target=\"_blank\">\n\t\t\t\t<Button startIcon={<GitHub></GitHub>}>GitHub</Button>\n\t\t\t</Link>\n\t\t</Typography>\n\t);\n}\n","import {\n\tButton,\n\tCard,\n\tCardActions,\n\tCardContent,\n\tChip,\n\tContainer,\n\tGridList,\n\tGridListTile,\n\tTypography,\n} from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport Footer from \"../components/Footer\";\nimport React, { useContext } from \"react\";\nimport { StoreContext } from \"../util/Store\";\n\nexport default function Overview() {\n\tconst [context, setContext] = useContext(StoreContext);\n\n\tconst accounts = (context.accounts || []).filter((x) => x.status !== \"notregistered\");\n\t// @ts-ignore\n\tconst accounts_today = accounts.filter((x) => x.created_at > new Date().setHours(0, 0, 0, 0));\n\tconst captcha_balance = context.captchas?.reduce((total, x) => total + (x.balance || 0), 0) || 0;\n\n\treturn (\n\t\t<>\n\t\t\t<Container maxWidth=\"md\">\n\t\t\t\t<GridList cellHeight=\"auto\" cols={3}>\n\t\t\t\t\t<GridListTile>\n\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>\n\t\t\t\t\t\t\t\t\tAccounts\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"h5\" component=\"h2\">\n\t\t\t\t\t\t\t\t\t{accounts.length}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"body2\" component=\"p\">\n\t\t\t\t\t\t\t\t\t<Chip color=\"primary\" clickable label={`+${accounts_today.length}`}></Chip> today\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t\t\t<CardActions>\n\t\t\t\t\t\t\t\t<Link to=\"/accounts\" className=\"MuiLink-underlineNone\">\n\t\t\t\t\t\t\t\t\t<Button color=\"primary\" size=\"small\">\n\t\t\t\t\t\t\t\t\t\tManage\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t</CardActions>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</GridListTile>\n\n\t\t\t\t\t<GridListTile>\n\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>\n\t\t\t\t\t\t\t\t\tCaptchas\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"h5\" component=\"h2\">\n\t\t\t\t\t\t\t\t\t${captcha_balance?.toFixed(2)}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"body2\" component=\"p\">\n\t\t\t\t\t\t\t\t\t<Chip color=\"primary\" clickable label={`+${context.captchas_solved || 0}`}></Chip>{\" \"}\n\t\t\t\t\t\t\t\t\tsolved\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t\t\t<CardActions>\n\t\t\t\t\t\t\t\t<Link to=\"/captchas\" className=\"MuiLink-underlineNone\">\n\t\t\t\t\t\t\t\t\t<Button color=\"primary\" size=\"small\">\n\t\t\t\t\t\t\t\t\t\tManage\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t</CardActions>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</GridListTile>\n\t\t\t\t</GridList>\n\t\t\t</Container>\n\n\t\t\t<Footer></Footer>\n\t\t</>\n\t);\n}\n","export async function request(path: string, options?: any) {\n\tif (!options) options = {};\n\tif (!options.headers) options.headers = {};\n\tif (options.body && typeof options.body === \"object\") {\n\t\toptions.body = JSON.stringify(options.body);\n\t\t// @ts-ignore\n\t\toptions.headers[\"content-type\"] = \"application/json\";\n\t}\n\tif (options.body && !options.method) options.method = \"POST\";\n\n\tconst response = await fetch(`http://localhost:4932${path}`, options);\n\tvar json: any = await response.text();\n\ttry {\n\t\tjson = JSON.parse(json);\n\t} catch (e) {\n\t\tthrow json;\n\t}\n\tif (response.status !== 200) throw json.message;\n\n\treturn json;\n}\n","// @ts-nocheck\nimport React, { Dispatch, SetStateAction, useContext, useEffect, useState } from \"react\";\nimport {\n\tDialogTitle,\n\tDialogContent,\n\tDialogContentText,\n\tDialogActions,\n\tDialog,\n\tButton,\n\tAccordion,\n\tAccordionSummary,\n\tTypography,\n\tAccordionDetails,\n\tCheckbox,\n\tFormControlLabel,\n\tTextField,\n} from \"@material-ui/core\";\nimport { Account } from \"../../util/types\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { TreeView, TreeItem } from \"@material-ui/lab\";\nimport { StoreContext } from \"../../util/Store\";\nimport { request } from \"../../util/request\";\n\nexport default function Action({\n\topen,\n\tsetOpen,\n\tselected,\n}: {\n\topen: boolean;\n\tsetOpen: Dispatch<SetStateAction<boolean>>;\n\tselected: Account[];\n}) {\n\tconst nothingSelected = !selected.length;\n\tconst [context, setContext] = useContext(StoreContext);\n\tconst [workers, setWorkers] = useState<string>(context.workers?.length || 1);\n\tconst [payload, setPayload] = useState<any>(null);\n\n\tasync function execute() {\n\t\tawait request(`/workers/`, { method: \"PUT\", body: { count: workers } });\n\n\t\tconst body = { account_ids: selected.map((x) => x.uuid), type: selected.first()?.type, payload };\n\t\tconsole.log(body);\n\n\t\tawait request(`/actions/`, {\n\t\t\tmethod: \"POST\",\n\t\t\tbody,\n\t\t});\n\t}\n\n\treturn (\n\t\t<Dialog maxWidth=\"xl\" open={open} onClose={() => setOpen(false)}>\n\t\t\t<DialogTitle>Action</DialogTitle>\n\t\t\t<DialogContent>\n\t\t\t\t<DialogContentText>\n\t\t\t\t\t{nothingSelected ? (\n\t\t\t\t\t\t\"Please select accounts before continuing\"\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<>{selected.length} Accounts selected</>\n\t\t\t\t\t)}\n\t\t\t\t</DialogContentText>\n\t\t\t\t{!nothingSelected && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{selected.find((x) => x.type === \"discord\") && <DiscordAction setPayload={setPayload} />}\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tmin={1}\n\t\t\t\t\t\t\tvalue={workers}\n\t\t\t\t\t\t\tonChange={(e) => setWorkers(Math.max(e.target.value, 1))}\n\t\t\t\t\t\t\tlabel=\"Thread count\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</DialogContent>\n\t\t\t<DialogActions>\n\t\t\t\t<Button onClick={() => setOpen(false)} color=\"default\">\n\t\t\t\t\tCancel\n\t\t\t\t</Button>\n\t\t\t\t<Button onClick={execute} disabled={nothingSelected} variant=\"contained\" color=\"primary\">\n\t\t\t\t\tExecute\n\t\t\t\t</Button>\n\t\t\t</DialogActions>\n\t\t</Dialog>\n\t);\n}\n\nfunction DiscordAction({ setPayload }: { setPayload: Dispatch<SetStateAction<any>> }) {\n\tconst [register, setRegister] = useState(false);\n\tconst [browser, setBrowser] = useState(false);\n\tconst [verifyEmail, setverifyEmail] = useState(false);\n\tconst [invite, setInvite] = useState<string>(null);\n\tconst [uploadDateOfBirth, setUploadDateOfBirth] = useState(false);\n\tconst [uploadAvatar, setUploadAvatar] = useState(false);\n\tconst [connect, setConnect] = useState(false);\n\tconst [updateUser, setUpdateUser] = useState(false);\n\n\tuseEffect(() => {\n\t\tlet payload = {\n\t\t\tverifyEmail,\n\t\t\tuploadDateOfBirth,\n\t\t\tuploadAvatar,\n\t\t\tconnect,\n\t\t\tupdateUser,\n\t\t};\n\t\tif (register) {\n\t\t\tpayload.register = {\n\t\t\t\tbrowser,\n\t\t\t\tinvite,\n\t\t\t};\n\t\t}\n\n\t\tsetPayload(payload);\n\t}, [register, browser, verifyEmail, invite, uploadDateOfBirth, uploadAvatar, connect, updateUser, setPayload]);\n\n\treturn (\n\t\t<Accordion defaultExpanded>\n\t\t\t<AccordionSummary expandIcon={<ExpandMoreIcon />}>\n\t\t\t\t<Typography>Discord</Typography>\n\t\t\t</AccordionSummary>\n\t\t\t<AccordionDetails style={{ flexDirection: \"column\" }}>\n\t\t\t\t<FormControlLabel\n\t\t\t\t\tcontrol={<Checkbox checked={register} onChange={(e) => setRegister(e.target.checked)} />}\n\t\t\t\t\tlabel=\"Register\"\n\t\t\t\t/>\n\t\t\t\t{register && (\n\t\t\t\t\t<div className=\"indent\">\n\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\tcontrol={<Checkbox checked={browser} onChange={(e) => setBrowser(e.target.checked)} />}\n\t\t\t\t\t\t\tlabel=\"Use browser\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\tvalue={invite}\n\t\t\t\t\t\t\tonChange={(e) => setInvite(e.target.value)}\n\t\t\t\t\t\t\tlabel=\"Invite\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t<FormControlLabel\n\t\t\t\t\tcontrol={<Checkbox checked={verifyEmail} onChange={(e) => setverifyEmail(e.target.checked)} />}\n\t\t\t\t\tlabel=\"Email verify\"\n\t\t\t\t/>\n\t\t\t\t<FormControlLabel\n\t\t\t\t\tcontrol={\n\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\tchecked={uploadDateOfBirth}\n\t\t\t\t\t\t\tonChange={(e) => setUploadDateOfBirth(e.target.checked)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\t\t\t\t\tlabel=\"Upload date of birth\"\n\t\t\t\t/>\n\t\t\t\t<FormControlLabel\n\t\t\t\t\tcontrol={<Checkbox checked={uploadAvatar} onChange={(e) => setUploadAvatar(e.target.checked)} />}\n\t\t\t\t\tlabel=\"Upload avatar\"\n\t\t\t\t/>\n\t\t\t\t<FormControlLabel\n\t\t\t\t\tcontrol={<Checkbox checked={connect} onChange={(e) => setConnect(e.target.checked)} />}\n\t\t\t\t\tlabel=\"Connect\"\n\t\t\t\t/>\n\t\t\t\t<FormControlLabel\n\t\t\t\t\tcontrol={<Checkbox checked={updateUser} onChange={(e) => setUpdateUser(e.target.checked)} />}\n\t\t\t\t\tlabel=\"Update User\"\n\t\t\t\t/>\n\t\t\t</AccordionDetails>\n\t\t</Accordion>\n\t);\n}\n","import { FormControl, InputLabel, MenuItem, Select } from \"@material-ui/core\";\nimport { Dispatch, SetStateAction, useEffect, useState } from \"react\";\n\nexport default function AccountType({ onChange }: { onChange: Dispatch<SetStateAction<string>> }) {\n\tconst [value, setValue] = useState(\"discord\");\n\n\tuseEffect(() => {\n\t\tonChange(value);\n\t}, [value, onChange]);\n\n\treturn (\n\t\t<FormControl>\n\t\t\t<InputLabel>Account Type</InputLabel>\n\t\t\t<Select required value={value} onChange={(e) => setValue(e.target.value as string)}>\n\t\t\t\t<MenuItem value={\"discord\"}>Discord</MenuItem>\n\t\t\t\t<MenuItem value={\"twitch\"}>Twitch</MenuItem>\n\t\t\t</Select>\n\t\t</FormControl>\n\t);\n}\n","// @ts-nocheck\nimport React, { Dispatch, SetStateAction, useContext, useState } from \"react\";\nimport {\n\tDialogTitle,\n\tDialogContent,\n\tDialogContentText,\n\tDialogActions,\n\tDialog,\n\tTextField,\n\tButton,\n\tCircularProgress,\n\tTypography,\n} from \"@material-ui/core\";\nimport AccountType from \"../../components/AccountType\";\nimport { request } from \"../../util/request\";\nimport { StoreContext } from \"../../util/Store\";\n\nexport default function Generate({ open, setOpen }: { open: boolean; setOpen: Dispatch<SetStateAction<boolean>> }) {\n\tconst [count, setCount] = useState(1);\n\tconst [loading, setLoading] = useState(false);\n\tconst [type, setType] = useState(\"\");\n\tconst [context, setContext] = useContext(StoreContext);\n\tconst [error, setError] = useState(\"\");\n\n\tasync function sendGenerate() {\n\t\ttry {\n\t\t\tsetLoading(true);\n\t\t\tawait request(`/accounts/generate`, {\n\t\t\t\tbody: {\n\t\t\t\t\tcount,\n\t\t\t\t\ttype,\n\t\t\t\t},\n\t\t\t});\n\t\t\tsetContext({ accounts: await request(`/accounts`) });\n\t\t\tsetOpen(false);\n\t\t} catch (e) {\n\t\t\tsetError(e.toString());\n\t\t} finally {\n\t\t\tsetLoading(false);\n\t\t}\n\t}\n\n\treturn (\n\t\t<Dialog open={open} onClose={() => setOpen(false)} aria-labelledby=\"form-dialog-title\">\n\t\t\t<DialogTitle id=\"form-dialog-title\">Generate accounts</DialogTitle>\n\t\t\t<DialogContent>\n\t\t\t\t<DialogContentText>\n\t\t\t\t\tThis will just create <strong>dummy</strong> accounts that can be used later to register.\n\t\t\t\t</DialogContentText>\n\t\t\t\t<Typography color=\"red\">{error}</Typography>\n\t\t\t\t<br />\n\t\t\t\t<div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\n\t\t\t\t\t<AccountType onChange={setType}></AccountType>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tvalue={count}\n\t\t\t\t\t\tmin={1}\n\t\t\t\t\t\tonChange={(e) => setCount(Math.max(Number(e.target.value), 1))}\n\t\t\t\t\t\tlabel=\"Amount\"\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</DialogContent>\n\t\t\t<DialogActions>\n\t\t\t\t<Button onClick={() => setOpen(false)} color=\"secondary\">\n\t\t\t\t\tCancel\n\t\t\t\t</Button>\n\t\t\t\t<Button onClick={sendGenerate} variant=\"contained\" color=\"primary\">\n\t\t\t\t\t{loading ? <CircularProgress color=\"secondary\" /> : \"Generate\"}\n\t\t\t\t</Button>\n\t\t\t</DialogActions>\n\t\t</Dialog>\n\t);\n}\n","// @ts-nocheck\nimport { Toolbar } from \"@material-ui/core\";\nimport { useContext, useState } from \"react\";\nimport { StoreContext } from \"../../util/Store\";\nimport MaterialTable from \"@material-table/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Action from \"./AccountAction\";\nimport Generate from \"./AccountGenerate\";\n\nexport default function Accounts() {\n\tconst [context] = useContext(StoreContext);\n\tconst [actionOpen, setActionOpen] = useState(false);\n\tconst [generateOpen, setGenerateOpen] = useState(false);\n\tconst [selected, setSelected] = useState([]);\n\n\treturn (\n\t\t<div className=\"page accounts\">\n\t\t\t<Toolbar className=\"toolbar\">\n\t\t\t\t<Button>Insert</Button>\n\t\t\t\t<Button>Export</Button>\n\t\t\t\t<Button onClick={() => setGenerateOpen(true)}>Generate</Button>\n\t\t\t\t<Button onClick={() => setActionOpen(true)}>Action</Button>\n\t\t\t</Toolbar>\n\t\t\t<Action selected={selected} open={actionOpen} setOpen={setActionOpen}></Action>\n\t\t\t<Generate open={generateOpen} setOpen={setGenerateOpen}></Generate>\n\t\t\t<MaterialTable\n\t\t\t\tstyle={{ overflow: \"auto\" }}\n\t\t\t\toptions={{\n\t\t\t\t\tselection: true,\n\t\t\t\t\tfiltering: true,\n\t\t\t\t\tpageSize: 20,\n\t\t\t\t}}\n\t\t\t\tonSelectionChange={(s) => setSelected(s)}\n\t\t\t\tisLoading={!context.accounts}\n\t\t\t\ttitle=\"Accounts\"\n\t\t\t\tdata={context.accounts}\n\t\t\t\tcolumns={[\n\t\t\t\t\t{ field: \"uuid\", title: \"ID\", filtering: false },\n\t\t\t\t\t{ field: \"type\", title: \"Type\", lookup: getLookup(context.accounts, (x) => x.type) },\n\t\t\t\t\t{\n\t\t\t\t\t\tfield: \"status\",\n\t\t\t\t\t\ttitle: \"Status\",\n\t\t\t\t\t\tlookup: getLookup(context.accounts, (x) => x.status),\n\t\t\t\t\t},\n\t\t\t\t]}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nfunction getLookup(accounts: Account[], callback: (account: Account) => string) {\n\treturn Object.fromEntries(\n\t\t(accounts || [])\n\t\t\t.map(callback)\n\t\t\t.unique()\n\t\t\t.map((x) => [x, x])\n\t);\n}\n","export const events = new EventSource(\"http://localhost:4932/events/\");\nevents.onopen = () => console.log(\"open\");\n// @ts-ignore\nwindow.events = events;\n","import { Snackbar } from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\nimport { useEffect, useState } from \"react\";\nimport { events } from \"../util/events\";\n\nexport default function Notifications() {\n\tconst [event, setEvent] = useState<any>(null);\n\tconst [timeout, changeTimeout] = useState<any>(null);\n\n\tfunction eventDispatched(action: Event) {\n\t\tclearTimeout(timeout);\n\t\tconsole.log(\"event\", action);\n\t\t// @ts-ignore\n\t\tconst data = JSON.parse(action.data);\n\t\tvar severity = \"info\";\n\t\tswitch (data.type) {\n\t\t\tcase \"ACTION_DONE\":\n\t\t\t\tseverity = \"success\";\n\n\t\t\t\tbreak;\n\t\t\tcase \"ACTION_ERROR\":\n\t\t\tcase \"error\":\n\t\t\t\tseverity = \"error\";\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\tsetEvent({ ...data, severity });\n\n\t\tchangeTimeout(\n\t\t\tsetTimeout(() => {\n\t\t\t\tsetEvent(null);\n\t\t\t}, 3000)\n\t\t);\n\t}\n\n\tfunction onError(error: Event) {\n\t\tif (events.readyState) return;\n\t\tsetEvent({ message: \"Connection lost\", severity: \"error\" });\n\t}\n\n\tuseEffect(() => {\n\t\tevents.addEventListener(\"message\", eventDispatched);\n\t\tevents.addEventListener(\"error\", onError);\n\n\t\treturn () => {\n\t\t\tevents.removeEventListener(\"message\", eventDispatched);\n\t\t\tevents.removeEventListener(\"error\", onError);\n\t\t};\n\t}, []);\n\n\treturn (\n\t\t<div>\n\t\t\t<Snackbar\n\t\t\t\tanchorOrigin={{\n\t\t\t\t\tvertical: \"top\",\n\t\t\t\t\thorizontal: \"right\",\n\t\t\t\t}}\n\t\t\t\tonClose={() => setEvent(null)}\n\t\t\t\topen={!!event}\n\t\t\t>\n\t\t\t\t<Alert severity={event?.severity}>{event?.message}</Alert>\n\t\t\t</Snackbar>\n\t\t</div>\n\t);\n}\n","import {\n\tButton,\n\tCircularProgress,\n\tDialog,\n\tDialogActions,\n\tDialogContent,\n\tDialogTitle,\n\tFormControl,\n\tFormControlLabel,\n\tInputLabel,\n\tMenuItem,\n\tSelect,\n\tSwitch,\n\tTextField,\n} from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\nimport { useContext, useState } from \"react\";\nimport { request } from \"../../util/request\";\nimport { StoreContext } from \"../../util/Store\";\nimport Linkify from \"react-linkify\";\n\nexport default function AddEmail({ open, setOpen }: { open: boolean; setOpen: (value: boolean) => void }) {\n\tconst [context, setContext] = useContext(StoreContext);\n\tconst [secure, setSecure] = useState(true);\n\tconst [provider, setProvider] = useState(\"gmail\");\n\tconst [email, setEmail] = useState(\"\");\n\tconst [password, setPassword] = useState(\"\");\n\tconst [host, setHost] = useState(\"\");\n\tconst [port, setPort] = useState(\"\");\n\tconst [loading, setLoading] = useState(false);\n\tconst [error, setError] = useState<any>();\n\n\tasync function AddProvider() {\n\t\tif (!provider) return;\n\n\t\tsetLoading(true);\n\t\tsetError(null);\n\t\ttry {\n\t\t\tconst result = await request(`/emails`, {\n\t\t\t\tbody: {\n\t\t\t\t\ttype: provider,\n\t\t\t\t\tsecure,\n\t\t\t\t\temail,\n\t\t\t\t\tpassword,\n\t\t\t\t\thost,\n\t\t\t\t\tport,\n\t\t\t\t},\n\t\t\t});\n\t\t\tsetContext({ emails: [...(context.emails || []), result] });\n\t\t\tsetOpen(false);\n\t\t} catch (e) {\n\t\t\tsetError(e);\n\t\t} finally {\n\t\t\tsetLoading(false);\n\t\t}\n\t}\n\n\treturn (\n\t\t<Dialog className=\"dialog-add-email\" maxWidth=\"xl\" open={open} onClose={() => setOpen(false)}>\n\t\t\t<DialogTitle>Add Email provider</DialogTitle>\n\t\t\t<DialogContent style={{ display: \"flex\", flexDirection: \"column\" }}>\n\t\t\t\t<FormControl>\n\t\t\t\t\t<InputLabel>Email Provider</InputLabel>\n\t\t\t\t\t<Select value={provider} onChange={(e) => setProvider(e.target.value as string)}>\n\t\t\t\t\t\t<MenuItem value={\"gmail\"}>\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\talt=\"\"\n\t\t\t\t\t\t\t\twidth=\"30\"\n\t\t\t\t\t\t\t\tsrc=\"https://logosmarken.com/wp-content/uploads/2020/11/Gmail-Logo.png\"\n\t\t\t\t\t\t\t></img>\n\t\t\t\t\t\t\tGmail\n\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t<MenuItem value={\"imap\"}>Imap</MenuItem>\n\t\t\t\t\t</Select>\n\t\t\t\t</FormControl>\n\n\t\t\t\t<TextField value={email} onChange={(e) => setEmail(e.target.value)} label=\"Email\"></TextField>\n\t\t\t\t<TextField\n\t\t\t\t\tvalue={password}\n\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t></TextField>\n\t\t\t\t{provider === \"imap\" && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<TextField value={host} onChange={(e) => setHost(e.target.value)} label=\"Host\"></TextField>\n\t\t\t\t\t\t<TextField value={port} onChange={(e) => setPort(e.target.value)} label=\"Port\"></TextField>\n\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\tcontrol={\n\t\t\t\t\t\t\t\t<Switch\n\t\t\t\t\t\t\t\t\tchecked={secure}\n\t\t\t\t\t\t\t\t\tonChange={(e) => setSecure(e.target.checked)}\n\t\t\t\t\t\t\t\t\tname=\"secure\"\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlabel=\"Use TLS\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\n\t\t\t\t{error && (\n\t\t\t\t\t<Alert severity=\"error\">\n\t\t\t\t\t\t<Linkify>{error}</Linkify>\n\t\t\t\t\t</Alert>\n\t\t\t\t)}\n\t\t\t</DialogContent>\n\t\t\t<DialogActions>\n\t\t\t\t<Button onClick={() => setOpen(false)} color=\"primary\">\n\t\t\t\t\tCancel\n\t\t\t\t</Button>\n\t\t\t\t<Button disabled={loading} onClick={AddProvider} color=\"primary\" autoFocus variant=\"contained\">\n\t\t\t\t\t{loading ? <CircularProgress /> : \"Add\"}\n\t\t\t\t</Button>\n\t\t\t</DialogActions>\n\t\t</Dialog>\n\t);\n}\n","import {\n\tButton,\n\tCircularProgress,\n\tDialog,\n\tDialogActions,\n\tDialogContent,\n\tDialogContentText,\n\tDialogTitle,\n} from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\nimport { useContext, useState } from \"react\";\nimport { request } from \"../../util/request\";\nimport { StoreContext } from \"../../util/Store\";\nimport Linkify from \"react-linkify\";\n\nexport default function DeleteEmail({ setOpen, uuid }: { setOpen: (value: boolean) => void; uuid: string }) {\n\tconst [context, setContext] = useContext(StoreContext);\n\tconst [loading, setLoading] = useState(false);\n\tconst [error, setError] = useState<any>();\n\n\tasync function RemoveProvider() {\n\t\tsetLoading(true);\n\t\tsetError(null);\n\t\ttry {\n\t\t\tconst email = await request(`/emails/${uuid}`, {\n\t\t\t\tmethod: \"DELETE\",\n\t\t\t});\n\n\t\t\tsetContext({ emails: context.emails?.filter((x) => x.uuid !== email.uuid) });\n\t\t\tsetOpen(false);\n\t\t} catch (e) {\n\t\t\tsetError(e);\n\t\t} finally {\n\t\t\tsetLoading(false);\n\t\t}\n\t}\n\n\treturn (\n\t\t<Dialog className=\"dialog-add-email\" maxWidth=\"xl\" open={!!uuid} onClose={() => setOpen(false)}>\n\t\t\t<DialogTitle>Delete Email</DialogTitle>\n\t\t\t<DialogContent>\n\t\t\t\t<DialogContentText>Are you sure you want to delete this email?</DialogContentText>\n\n\t\t\t\t{error && (\n\t\t\t\t\t<Alert severity=\"error\">\n\t\t\t\t\t\t<Linkify>{error}</Linkify>\n\t\t\t\t\t</Alert>\n\t\t\t\t)}\n\t\t\t</DialogContent>\n\t\t\t<DialogActions>\n\t\t\t\t<Button onClick={() => setOpen(false)} color=\"primary\">\n\t\t\t\t\tCancel\n\t\t\t\t</Button>\n\t\t\t\t<Button disabled={loading} onClick={RemoveProvider} color=\"primary\" autoFocus variant=\"contained\">\n\t\t\t\t\t{loading ? <CircularProgress /> : \"Delete\"}\n\t\t\t\t</Button>\n\t\t\t</DialogActions>\n\t\t</Dialog>\n\t);\n}\n","// @ts-nocheck\nimport { Button, Card, CardActions, CardContent, Container, Typography } from \"@material-ui/core\";\nimport { Add } from \"@material-ui/icons\";\nimport { useContext, useState } from \"react\";\nimport { StoreContext } from \"../../util/Store\";\nimport EmailAdd from \"./EmailAdd\";\nimport EmailDelete from \"./EmailDelete\";\n\nexport default function Email() {\n\tconst [context, setContext] = useContext(StoreContext);\n\tconst [addPopup, setAddPopup] = useState(false);\n\tconst [deleteEmail, setDeleteEmail] = useState(\"\");\n\n\treturn (\n\t\t<div className=\"page email\">\n\t\t\t<Container maxWidth=\"md\">\n\t\t\t\t<br />\n\t\t\t\t<Button onClick={() => setAddPopup(true)} startIcon={<Add />} color=\"primary\" variant=\"contained\">\n\t\t\t\t\tAdd\n\t\t\t\t</Button>\n\t\t\t\t<EmailAdd open={addPopup} setOpen={setAddPopup}></EmailAdd>\n\t\t\t\t<EmailDelete uuid={deleteEmail} setOpen={setDeleteEmail}></EmailDelete>\n\n\t\t\t\t<div style={{ marginTop: \"1rem\" }}>\n\t\t\t\t\t{(context.emails || []).map((x) => (\n\t\t\t\t\t\t<Card key={x.uuid}>\n\t\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>\n\t\t\t\t\t\t\t\t\t{x.type}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"h5\" component=\"h2\">\n\t\t\t\t\t\t\t\t\t{x.username}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<Typography color=\"textSecondary\">\n\t\t\t\t\t\t\t\t\t{x.host}:{x.port}\n\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\tSecure: {x.secure ? \"true\" : \"false\"}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t\t\t<CardActions>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tonClick={((id) => setDeleteEmail(id)).bind(null, x.uuid)}\n\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tDelete\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</CardActions>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</Container>\n\t\t</div>\n\t);\n}\n","import {\n\tButton,\n\tCircularProgress,\n\tDialog,\n\tDialogActions,\n\tDialogContent,\n\tDialogTitle,\n\tFormControl,\n\tTextareaAutosize,\n\tInputLabel,\n\tMenuItem,\n\tSelect,\n\tTextField,\n} from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\nimport { useContext, useState } from \"react\";\nimport { request } from \"../../util/request\";\nimport { StoreContext } from \"../../util/Store\";\nimport Linkify from \"react-linkify\";\n\nexport default function AddProxy({ open, setOpen }: { open: boolean; setOpen: (value: boolean) => void }) {\n\tconst [context, setContext] = useContext(StoreContext);\n\tconst [provider, setProvider] = useState(\"list\");\n\tconst [poolSize, setPoolSize] = useState(1);\n\tconst [loading, setLoading] = useState(false);\n\tconst [error, setError] = useState<any>();\n\tconst [list, setList] = useState(\"\");\n\n\tasync function AddProvider() {\n\t\tif (!provider) return;\n\n\t\tsetLoading(true);\n\t\tsetError(null);\n\t\ttry {\n\t\t\tconst body: any = {\n\t\t\t\ttype: provider,\n\t\t\t\tpoolSize,\n\t\t\t};\n\t\t\tif (list) {\n\t\t\t\tbody.list = list.split(\"\\n\");\n\t\t\t\tbody.poolSize = body.list.length;\n\t\t\t}\n\t\t\tconst proxy = await request(`/proxies`, {\n\t\t\t\tbody,\n\t\t\t});\n\t\t\tsetContext({ proxies: [...(context.proxies || []), proxy] });\n\t\t\tsetOpen(false);\n\t\t} catch (e) {\n\t\t\tsetError(e);\n\t\t} finally {\n\t\t\tsetLoading(false);\n\t\t}\n\t}\n\n\treturn (\n\t\t<Dialog className=\"dialog-add-email\" maxWidth=\"xl\" open={open} onClose={() => setOpen(false)}>\n\t\t\t<DialogTitle>Add Proxies</DialogTitle>\n\t\t\t<DialogContent style={{ display: \"flex\", flexDirection: \"column\" }}>\n\t\t\t\t<FormControl>\n\t\t\t\t\t<InputLabel>Proxy type</InputLabel>\n\t\t\t\t\t<Select value={provider} onChange={(e) => setProvider(e.target.value as string)}>\n\t\t\t\t\t\t<MenuItem value={\"list\"}>Proxy list</MenuItem>\n\t\t\t\t\t\t<MenuItem value={\"tor\"}>TOR</MenuItem>\n\t\t\t\t\t\t<MenuItem value={\"huawei-lte\"}>Huawei LTE Stick</MenuItem>\n\t\t\t\t\t</Select>\n\t\t\t\t</FormControl>\n\n\t\t\t\t{provider === \"list\" ? (\n\t\t\t\t\t<TextareaAutosize\n\t\t\t\t\t\tvalue={list}\n\t\t\t\t\t\tonChange={(e) => setList(e.target.value)}\n\t\t\t\t\t\trowsMin={3}\n\t\t\t\t\t\tplaceholder=\"http://localhost:8080\"\n\t\t\t\t\t/>\n\t\t\t\t) : (\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tvalue={poolSize}\n\t\t\t\t\t\tonChange={(e) => setPoolSize(Math.max(Number(e.target.value), 1))}\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tlabel=\"Amount\"\n\t\t\t\t\t></TextField>\n\t\t\t\t)}\n\n\t\t\t\t{error && (\n\t\t\t\t\t<Alert severity=\"error\">\n\t\t\t\t\t\t<Linkify>{error}</Linkify>\n\t\t\t\t\t</Alert>\n\t\t\t\t)}\n\t\t\t</DialogContent>\n\t\t\t<DialogActions>\n\t\t\t\t<Button onClick={() => setOpen(false)} color=\"primary\">\n\t\t\t\t\tCancel\n\t\t\t\t</Button>\n\t\t\t\t<Button disabled={loading} onClick={AddProvider} color=\"primary\" autoFocus variant=\"contained\">\n\t\t\t\t\t{loading ? <CircularProgress /> : \"Add\"}\n\t\t\t\t</Button>\n\t\t\t</DialogActions>\n\t\t</Dialog>\n\t);\n}\n","import {\n\tButton,\n\tCircularProgress,\n\tDialog,\n\tDialogActions,\n\tDialogContent,\n\tDialogContentText,\n\tDialogTitle,\n} from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\nimport { useContext, useState } from \"react\";\nimport { request } from \"../../util/request\";\nimport { StoreContext } from \"../../util/Store\";\nimport Linkify from \"react-linkify\";\n\nexport default function DeleteProxy({ setOpen, uuid }: { setOpen: (value: boolean) => void; uuid: string }) {\n\tconst [context, setContext] = useContext(StoreContext);\n\tconst [loading, setLoading] = useState(false);\n\tconst [error, setError] = useState<any>();\n\n\tasync function RemoveProvider() {\n\t\tsetLoading(true);\n\t\tsetError(null);\n\t\ttry {\n\t\t\tconst email = await request(`/proxies/${uuid}`, {\n\t\t\t\tmethod: \"DELETE\",\n\t\t\t});\n\n\t\t\tsetContext({ proxies: context.proxies?.filter((x) => x.uuid !== email.uuid) });\n\t\t\tsetOpen(false);\n\t\t} catch (e) {\n\t\t\tsetError(e);\n\t\t} finally {\n\t\t\tsetLoading(false);\n\t\t}\n\t}\n\n\treturn (\n\t\t<Dialog className=\"dialog-add-email\" maxWidth=\"xl\" open={!!uuid} onClose={() => setOpen(false)}>\n\t\t\t<DialogTitle>Delete Proxy</DialogTitle>\n\t\t\t<DialogContent>\n\t\t\t\t<DialogContentText>Are you sure you want to delete this proxy?</DialogContentText>\n\n\t\t\t\t{error && (\n\t\t\t\t\t<Alert severity=\"error\">\n\t\t\t\t\t\t<Linkify>{error}</Linkify>\n\t\t\t\t\t</Alert>\n\t\t\t\t)}\n\t\t\t</DialogContent>\n\t\t\t<DialogActions>\n\t\t\t\t<Button onClick={() => setOpen(false)} color=\"primary\">\n\t\t\t\t\tCancel\n\t\t\t\t</Button>\n\t\t\t\t<Button disabled={loading} onClick={RemoveProvider} color=\"primary\" autoFocus variant=\"contained\">\n\t\t\t\t\t{loading ? <CircularProgress /> : \"Delete\"}\n\t\t\t\t</Button>\n\t\t\t</DialogActions>\n\t\t</Dialog>\n\t);\n}\n","// @ts-nocheck\nimport { Button, Card, CardActions, CardContent, Container, Typography } from \"@material-ui/core\";\nimport { Add } from \"@material-ui/icons\";\nimport { useContext, useState } from \"react\";\nimport { StoreContext } from \"../../util/Store\";\nimport ProxyAdd from \"./ProxyAdd\";\nimport ProxyDelete from \"./ProxyDelete\";\n\nexport default function Proxies() {\n\tconst [context, setContext] = useContext(StoreContext);\n\tconst [addPopup, setAddPopup] = useState(false);\n\tconst [deleteProxy, setDeleteProxy] = useState(\"\");\n\n\treturn (\n\t\t<div className=\"page email\">\n\t\t\t<Container maxWidth=\"md\">\n\t\t\t\t<br />\n\t\t\t\t<Button onClick={() => setAddPopup(true)} startIcon={<Add />} color=\"primary\" variant=\"contained\">\n\t\t\t\t\tAdd\n\t\t\t\t</Button>\n\t\t\t\t<ProxyAdd open={addPopup} setOpen={setAddPopup}></ProxyAdd>\n\t\t\t\t<ProxyDelete uuid={deleteProxy} setOpen={setDeleteProxy}></ProxyDelete>\n\n\t\t\t\t<div style={{ marginTop: \"1rem\" }}>\n\t\t\t\t\t{(context.proxies || []).map((x) => (\n\t\t\t\t\t\t<Card key={x.uuid}>\n\t\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t\t<Typography color=\"textSecondary\" gutterBottom></Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"h5\" component=\"h2\">\n\t\t\t\t\t\t\t\t\t{x.type}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<Typography color=\"textSecondary\">Size: {x.poolSize}</Typography>\n\t\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t\t\t<CardActions>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tonClick={((id) => setDeleteProxy(id)).bind(null, x.uuid)}\n\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tDelete\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</CardActions>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</Container>\n\t\t</div>\n\t);\n}\n","import {\n\tButton,\n\tCircularProgress,\n\tDialog,\n\tDialogActions,\n\tDialogContent,\n\tDialogTitle,\n\tFormControl,\n\tFormControlLabel,\n\tInputLabel,\n\tMenuItem,\n\tSelect,\n\tSwitch,\n\tTextField,\n} from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\nimport { useContext, useState } from \"react\";\nimport { request } from \"../../util/request\";\nimport { StoreContext } from \"../../util/Store\";\nimport Linkify from \"react-linkify\";\n\nexport default function CaptchaAdd({ open, setOpen }: { open: boolean; setOpen: (value: boolean) => void }) {\n\tconst [context, setContext] = useContext(StoreContext);\n\tconst [provider, setProvider] = useState(\"\");\n\tconst [key, setKey] = useState(\"\");\n\tconst [loading, setLoading] = useState(false);\n\tconst [error, setError] = useState<any>();\n\n\tasync function AddProvider() {\n\t\tif (!provider) return;\n\n\t\tsetLoading(true);\n\t\tsetError(null);\n\t\ttry {\n\t\t\tconst captcha = await request(`/captchas`, {\n\t\t\t\tbody: {\n\t\t\t\t\tservice: provider,\n\t\t\t\t\tkey,\n\t\t\t\t},\n\t\t\t});\n\t\t\tsetContext({ captchas: [...(context.captchas || []), captcha] });\n\t\t\tsetOpen(false);\n\t\t} catch (e) {\n\t\t\tsetError(e);\n\t\t} finally {\n\t\t\tsetLoading(false);\n\t\t}\n\t}\n\n\treturn (\n\t\t<Dialog className=\"dialog-add-captcha\" maxWidth=\"xl\" open={open} onClose={() => setOpen(false)}>\n\t\t\t<DialogTitle>Add Captcha provider</DialogTitle>\n\t\t\t<DialogContent style={{ display: \"flex\", flexDirection: \"column\" }}>\n\t\t\t\t<FormControl>\n\t\t\t\t\t<InputLabel>Captcha Provider</InputLabel>\n\t\t\t\t\t<Select value={provider} onChange={(e) => setProvider(e.target.value as string)}>\n\t\t\t\t\t\t<MenuItem value={\"2captcha\"}>2Captcha</MenuItem>\n\t\t\t\t\t\t<MenuItem value={\"anti-captcha\"}>AntiCaptcha</MenuItem>\n\t\t\t\t\t\t<MenuItem value={\"anti-captcha-trial\"}>AntiCaptcha old</MenuItem>\n\t\t\t\t\t</Select>\n\t\t\t\t</FormControl>\n\n\t\t\t\t<TextField value={key} onChange={(e) => setKey(e.target.value)} label=\"API Key\"></TextField>\n\n\t\t\t\t{error && (\n\t\t\t\t\t<Alert severity=\"error\">\n\t\t\t\t\t\t<Linkify>{error}</Linkify>\n\t\t\t\t\t</Alert>\n\t\t\t\t)}\n\t\t\t</DialogContent>\n\t\t\t<DialogActions>\n\t\t\t\t<Button onClick={() => setOpen(false)} color=\"primary\">\n\t\t\t\t\tCancel\n\t\t\t\t</Button>\n\t\t\t\t<Button disabled={loading} onClick={AddProvider} color=\"primary\" autoFocus variant=\"contained\">\n\t\t\t\t\t{loading ? <CircularProgress /> : \"Add\"}\n\t\t\t\t</Button>\n\t\t\t</DialogActions>\n\t\t</Dialog>\n\t);\n}\n","import {\n\tButton,\n\tCircularProgress,\n\tDialog,\n\tDialogActions,\n\tDialogContent,\n\tDialogContentText,\n\tDialogTitle,\n} from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\nimport { useContext, useState } from \"react\";\nimport { request } from \"../../util/request\";\nimport { StoreContext } from \"../../util/Store\";\nimport Linkify from \"react-linkify\";\n\nexport default function DeleteCaptcha({ setOpen, uuid }: { setOpen: (value: boolean) => void; uuid: string }) {\n\tconst [context, setContext] = useContext(StoreContext);\n\tconst [loading, setLoading] = useState(false);\n\tconst [error, setError] = useState<any>();\n\n\tasync function RemoveProvider() {\n\t\tsetLoading(true);\n\t\tsetError(null);\n\t\ttry {\n\t\t\tconst email = await request(`/captchas/${uuid}`, {\n\t\t\t\tmethod: \"DELETE\",\n\t\t\t});\n\n\t\t\tsetContext({ captchas: context.captchas?.filter((x) => x.uuid !== email.uuid) });\n\t\t\tsetOpen(false);\n\t\t} catch (e) {\n\t\t\tsetError(e);\n\t\t} finally {\n\t\t\tsetLoading(false);\n\t\t}\n\t}\n\n\treturn (\n\t\t<Dialog className=\"dialog-delete-captcha\" maxWidth=\"xl\" open={!!uuid} onClose={() => setOpen(false)}>\n\t\t\t<DialogTitle>Delete Captcha provider</DialogTitle>\n\t\t\t<DialogContent>\n\t\t\t\t<DialogContentText>Are you sure you want to delete this captcha provider?</DialogContentText>\n\n\t\t\t\t{error && (\n\t\t\t\t\t<Alert severity=\"error\">\n\t\t\t\t\t\t<Linkify>{error}</Linkify>\n\t\t\t\t\t</Alert>\n\t\t\t\t)}\n\t\t\t</DialogContent>\n\t\t\t<DialogActions>\n\t\t\t\t<Button onClick={() => setOpen(false)} color=\"primary\">\n\t\t\t\t\tCancel\n\t\t\t\t</Button>\n\t\t\t\t<Button disabled={loading} onClick={RemoveProvider} color=\"primary\" autoFocus variant=\"contained\">\n\t\t\t\t\t{loading ? <CircularProgress /> : \"Delete\"}\n\t\t\t\t</Button>\n\t\t\t</DialogActions>\n\t\t</Dialog>\n\t);\n}\n","// @ts-nocheck\nimport { Button, Card, CardActions, CardContent, Container, Typography } from \"@material-ui/core\";\nimport { Add } from \"@material-ui/icons\";\nimport { useContext, useState } from \"react\";\nimport { StoreContext } from \"../../util/Store\";\nimport CaptchaAdd from \"./CaptchaAdd\";\nimport CaptchaDelete from \"./CaptchaDelete\";\n\nexport default function Captcha() {\n\tconst [context, setContext] = useContext(StoreContext);\n\tconst [addPopup, setAddPopup] = useState(false);\n\tconst [deleteCaptcha, setDeleteCaptcha] = useState();\n\n\treturn (\n\t\t<div className=\"page captchas\">\n\t\t\t<Container maxWidth=\"md\">\n\t\t\t\t<br />\n\t\t\t\t<Button onClick={() => setAddPopup(true)} startIcon={<Add />} color=\"primary\" variant=\"contained\">\n\t\t\t\t\tAdd\n\t\t\t\t</Button>\n\t\t\t\t<CaptchaAdd open={addPopup} setOpen={setAddPopup}></CaptchaAdd>\n\t\t\t\t<CaptchaDelete uuid={deleteCaptcha} setOpen={setDeleteCaptcha}></CaptchaDelete>\n\n\t\t\t\t<div style={{ marginTop: \"1rem\" }}>\n\t\t\t\t\t{(context.captchas || []).map((x) => (\n\t\t\t\t\t\t<Card key={x.uuid}>\n\t\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>\n\t\t\t\t\t\t\t\t\t{x.service}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"h5\" component=\"h2\">\n\t\t\t\t\t\t\t\t\tBalance: ${Number(x.balance).toFixed(2)}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<Typography color=\"textSecondary\">Key: {x.key}</Typography>\n\t\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t\t\t<CardActions>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tonClick={((id) => setDeleteCaptcha(id)).bind(null, x.uuid)}\n\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tDelete\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</CardActions>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</Container>\n\t\t</div>\n\t);\n}\n","import { CssBaseline } from \"@material-ui/core\";\nimport Sidebar from \"./Sidebar\";\nimport Header from \"./Header\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Overview from \"../pages/Overview\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport React, { useContext, useEffect } from \"react\";\nimport { StoreContext } from \"../util/Store\";\nimport Accounts from \"../pages/Account/Accounts\";\nimport { request } from \"../util/request\";\nimport Notifications from \"./Notifications\";\nimport Emails from \"../pages/Email/Emails\";\nimport Proxies from \"../pages/Proxy/Proxies\";\nimport Captchas from \"../pages/Captcha/Captchas\";\n\nexport default function Dashboard() {\n\tconst [context, setContext] = useContext(StoreContext);\n\t// @ts-ignore\n\twindow.context = context;\n\n\tconst theme = React.useMemo(\n\t\t() =>\n\t\t\tcreateMuiTheme({\n\t\t\t\tpalette: {\n\t\t\t\t\tprimary: {\n\t\t\t\t\t\tmain: \"#ff4545\",\n\t\t\t\t\t},\n\t\t\t\t\tsecondary: {\n\t\t\t\t\t\tmain: context.darkMode ? \"#c2c2c2\" : \"#808080\",\n\t\t\t\t\t},\n\t\t\t\t\ttype: context.darkMode ? \"dark\" : \"light\",\n\t\t\t\t},\n\t\t\t}),\n\t\t[context.darkMode]\n\t);\n\n\tuseEffect(() => {\n\t\trequest(`/accounts`).then((accounts) => setContext({ accounts }));\n\t\trequest(`/workers`).then((workers) => setContext({ workers }));\n\t\trequest(`/emails`).then((emails) => setContext({ emails }));\n\t\trequest(`/captchas`).then(({ total, providers }) =>\n\t\t\tsetContext({ captchas: providers, captchas_solved: total })\n\t\t);\n\t\trequest(`/proxies`).then((proxies) => setContext({ proxies }));\n\t}, []);\n\n\treturn (\n\t\t<Router>\n\t\t\t<ThemeProvider theme={theme}>\n\t\t\t\t<div style={{ display: \"flex\" }}>\n\t\t\t\t\t<CssBaseline />\n\t\t\t\t\t<Sidebar></Sidebar>\n\t\t\t\t\t<Notifications />\n\n\t\t\t\t\t<main style={{ flexGrow: 1, display: \"flex\", flexDirection: \"column\", height: \"100%\", width: 0 }}>\n\t\t\t\t\t\t<Header></Header>\n\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t<Route exact path=\"/\" component={Overview}></Route>\n\t\t\t\t\t\t\t<Route exact path=\"/accounts\" component={Accounts}></Route>\n\t\t\t\t\t\t\t<Route exact path=\"/emails\" component={Emails}></Route>\n\t\t\t\t\t\t\t<Route exact path=\"/captchas\" component={Captchas}></Route>\n\t\t\t\t\t\t\t<Route exact path=\"/proxies\" component={Proxies}></Route>\n\t\t\t\t\t\t</Switch>\n\t\t\t\t\t</main>\n\t\t\t\t</div>\n\t\t\t</ThemeProvider>\n\t\t</Router>\n\t);\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport { Store } from \"./util/Store\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Store>\n\t\t\t<App />\n\t\t</Store>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}